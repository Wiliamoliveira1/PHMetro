#include <Arduino.h>
#include <Wire.h>
#include <Adafruit_ADS1X15.h>

// --- Defini√ß√µes de pinos (I2C "DTS") ---
#define I2C_SDA 6
#define I2C_SCL 7

// --- Inicializa√ß√£o do ADS1115 ---
Adafruit_ADS1115 ads;
#define PH_CHANNEL 0      // Canal do pH
#define DTS_CHANNEL 1     // Canal do sensor de condutividade
#define NUM_SAMPLES 20
#define GAIN 6.144
#define ADC_RESOLUTION 32768.0

// --- Vari√°veis de calibra√ß√£o ---
float t4 = NAN, t7 = NAN, t10 = NAN;
float a = 0, b = 0, c = 0;
float k_condutividade = NAN; // mS/cm por volt
bool calibrado = false;

// --- Fun√ß√£o para converter leitura ADC em tens√£o ---
float leituraParaTensao(int16_t leituraADC) {
  return (leituraADC * GAIN) / ADC_RESOLUTION;
}

// --- Fun√ß√£o para calcular os coeficientes da curva quadr√°tica ---
void calcularCoeficientes() {
  float x1 = t4, y1 = 4.0;
  float x2 = t7, y2 = 7.0;
  float x3 = t10, y3 = 10.0;

  float denom = (x1 - x2) * (x1 - x3) * (x2 - x3);
  a = (x3 * (y2 - y1) + x2 * (y1 - y3) + x1 * (y3 - y2)) / denom;
  b = (x3 * x3 * (y1 - y2) + x2 * x2 * (y3 - y1) + x1 * x1 * (y2 - y3)) / denom;
  c = (x2 * x3 * (x2 - x3) * y1 + x3 * x1 * (x3 - x1) * y2 + x1 * x2 * (x1 - x2) * y3) / denom;

  calibrado = true;

  Serial.println("\n‚úÖ Coeficientes de calibra√ß√£o atualizados:");
  Serial.print("  a = "); Serial.println(a, 5);
  Serial.print("  b = "); Serial.println(b, 5);
  Serial.print("  c = "); Serial.println(c, 5);
}

// --- Fun√ß√£o para converter tens√£o em pH usando os coeficientes ---
float calcularPH(float tensao) {
  if (!calibrado) return -1;
  float pH = a * tensao * tensao + b * tensao + c;
  return constrain(pH, 0.0, 14.0);
}

// --- Setup ---
void setup() {
  Serial.begin(115200);
  delay(1000);

  Wire.begin(I2C_SDA, I2C_SCL);
  if (!ads.begin(0x48, &Wire)) {
    Serial.println("‚ö†Ô∏è ADS1115 n√£o encontrado. Verifique conex√µes.");
    while (true);
  }

  ads.setGain(GAIN_TWOTHIRDS); // ¬±6.144V

  Serial.println("üîß Sistema de calibra√ß√£o iniciado");
  Serial.println("üìå Insira os sensores e pressione:");
  Serial.println("    ‚û§ 'A' para calibrar com solu√ß√£o pH 4");
  Serial.println("    ‚û§ 'B' para calibrar com solu√ß√£o pH 7");
  Serial.println("    ‚û§ 'C' para calibrar com solu√ß√£o pH 10");
  Serial.println("    ‚û§ 'D' para calibrar condutividade com 12,88 mS/cm");
}

// --- Loop principal ---
void loop() {
  // Leitura m√©dia do canal de pH
  int32_t somaPH = 0;
  for (int i = 0; i < NUM_SAMPLES; i++) {
    somaPH += ads.readADC_SingleEnded(PH_CHANNEL);
    delay(10);
  }
  float mediaADC = somaPH / float(NUM_SAMPLES);
  float tensaoPH = leituraParaTensao(mediaADC);

  // Leitura do canal de condutividade (DTS)
  int32_t somaDTS = 0;
  for (int i = 0; i < NUM_SAMPLES; i++) {
    somaDTS += ads.readADC_SingleEnded(DTS_CHANNEL);
    delay(10);
  }
  float tensaoDTS = leituraParaTensao(somaDTS / float(NUM_SAMPLES));

  // Checar comandos de calibra√ß√£o via Serial
  if (Serial.available()) {
    char cmd = Serial.read();

    if (cmd == 'A' || cmd == 'a') {
      t4 = tensaoPH;
      Serial.print("‚úÖ pH 4 calibrado com tens√£o: ");
      Serial.print(t4, 4); Serial.println(" V");
    } else if (cmd == 'B' || cmd == 'b') {
      t7 = tensaoPH;
      Serial.print("‚úÖ pH 7 calibrado com tens√£o: ");
      Serial.print(t7, 4); Serial.println(" V");
    } else if (cmd == 'C' || cmd == 'c') {
      t10 = tensaoPH;
      Serial.print("‚úÖ pH 10 calibrado com tens√£o: ");
      Serial.print(t10, 4); Serial.println(" V");
    } else if (cmd == 'D' || cmd == 'd') {
      k_condutividade = 12.88 / tensaoDTS;
      Serial.println("‚úÖ Sensor de condutividade calibrado com solu√ß√£o padr√£o:");
      Serial.print("   Tens√£o DTS: "); Serial.print(tensaoDTS, 4); Serial.println(" V");
      Serial.print("   k = "); Serial.print(k_condutividade, 4); Serial.println(" mS/cm por Volt");
    }

    if (!isnan(t4) && !isnan(t7) && !isnan(t10)) {
      calcularCoeficientes();
    }
  }

  // Exibir leitura atual
  Serial.print("üìè pH ‚Üí ADC: ");
  Serial.print(mediaADC);
  Serial.print(" | Tens√£o: ");
  Serial.print(tensaoPH, 3);

  if (calibrado) {
    float ph = calcularPH(tensaoPH);
    Serial.print(" | pH: ");
    Serial.print(ph, 2);
  } else {
    Serial.print(" | ‚ö†Ô∏è Ainda n√£o calibrado");
  }

  if (!isnan(k_condutividade)) {
    float condutividade = k_condutividade * tensaoDTS;
    Serial.print(" | DTS: ");
    Serial.print(tensaoDTS, 3);
    Serial.print(" V | Condutividade: ");
    Serial.print(condutividade, 2);
    Serial.println(" mS/cm");
  } else {
    Serial.print(" | DTS: ");
    Serial.print(tensaoDTS, 3);
    Serial.println(" V | ‚ö†Ô∏è DTS n√£o calibrado.");
  }

  delay(3000);
}
